apply plugin: 'com.android.application'

Properties signingProperties = new Properties()
signingProperties.load(new FileInputStream(file("../signings/signing.properties")))

Properties localProperties = new Properties();
localProperties.load(new FileInputStream(file("../local.properties")));

android {
    compileSdkVersion gradle.compileSdkVersion
    buildToolsVersion gradle.buildToolsVersion

    defaultConfig {
        applicationId "com.sunfusheng.sample"
        minSdkVersion gradle.minSdkVersion
        targetSdkVersion gradle.targetSdkVersion
        versionCode gradle.versionCode
        versionName gradle.versionName
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            storeFile file(signingProperties['KEYSTORE_FILEPATH'])
            storePassword signingProperties['STORE_PASSWORD']
            keyAlias signingProperties['KEY_ALIAS']
            keyPassword signingProperties['KEY_PASSWORD']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all {
                variant -> generateApk(variant)
            }
        }

        debug {
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all {
                variant -> generateApk(variant)
            }
        }
    }
}

def generateApk(variant) {
    if (variant.buildType.name == "release") {
        variant.getPackageApplication().outputDirectory = new File(project.rootDir.absolutePath + "/Sample/outputs")
        variant.getPackageApplication().outputScope.apkDatas.forEach { apkData ->
            apkData.outputFileName = "MarqueeView.apk"
        }
    }
}

static Boolean isProjectActivated(Properties properties, String projectName) {
    String property = properties.getProperty(projectName);
    return (null != property && property.toBoolean());
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:' + gradle.supportLibraryVersion
    implementation 'com.android.support:design:' + gradle.supportLibraryVersion
    implementation 'com.android.support:recyclerview-v7:' + gradle.supportLibraryVersion

    if (isProjectActivated(localProperties, "localSourceEnabled")) {
        compile project(':MarqueeView')
    } else {
        compile 'com.sunfusheng:marqueeview:1.3.3'
    }
}
